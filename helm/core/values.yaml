image:
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

mongodb:
  internal: true
  auth:
    enabled: true
  metrics:
    enabled: true
  shards: 2
  configsvr:
    replicaCount: 1
    mongodbExtraFlags:
      - "--tlsMode disabled"
    persistence:
      size: 10Gi
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
  mongos:
    replicaCount: 1
    mongodbExtraFlags:
      - "--tlsMode disabled"
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
  shardsvr:
    dataNode:
      replicaCount: 1
    persistence:
      size: 10Gi
    resources:
      requests:
        cpu: 100m
        memory: 512Mi

nats:
  auth:
    enabled: true
    user: "awakari"
    password: "awakari"
  jetstream:
    enabled: true
  persistence:
    enabled: true
  resourceType: "statefulset"
  replicaCount: 2
  resources:
    requests:
      cpu: 10m
      memory: 32Mi

redis:
  cluster:
    nodes: 3
    replicas: 0
  usePassword: false
  persistence:
    enabled: false
  redis:
    configmap: |
      maxmemory 1gb
      maxmemory-policy allkeys-lru

semaphore:
  backend:
    nats: true
  nats:
    uri: "nats://core-nats:4222"

queue:
  backend:
    nats: true
  nats:
    uri: "nats://core-nats:4222"

conditionstext:
  db:
    hostname: "core-mongodb:27017"
    name: "conditions-text"
    table:
      # Database table name to use.
      name: "conditions-text"
      lockTtl:
        create: "1000s"
    username: "root"
    password:
      secret:
        enabled: true
        name: "core-mongodb"
  text:
    splitLimit: 1024
    mostFreqLimit: 256

matches:
  # Database related configuration.
  db:
    hostname: "core-mongodb:27017"
    # Database name to use.
    username: "root"
    password:
      secret:
        enabled: true
        name: "core-mongodb"

messages:
  db:
    hostname: "core-mongodb:27017"
    username: "root"
    password:
      secret:
        enabled: true
        name: "core-mongodb"

subscriptionsproxy:
  api:
    conditions:
      text:
        uri: "core-conditionstext:50051"
    subscriptions: # storage
      uri: "subscriptions:50051" # use internal subscriptions storage
      tls:
        enabled: false # don't use mTLS for the internal subscriptions storage
  cache:
    redis:
      # change the addrs in accordance when you change the redis node count
      addrs: "core-redis:6379"

reader:
  api:
    matches:
      uri: "core-matches:50051"
    messages:
      uri: "core-messages:50051"
    semaphore:
      uri: "core-semaphore:50051"

writer:
  api:
    conditions:
      text:
        uri: "core-conditionstext:50051"
    subscriptions:
      uri: "core-subscriptionsproxy:50051"
    matches:
      uri: "core-matches:50051"
    messages:
      uri: "core-messages:50051"
    reader:
      uri: "core-reader:50051"
  queue:
    batchSize: 64
    limit: 4096
    uri: "core-queue:50051"
